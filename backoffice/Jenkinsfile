pipeline {
    agent any

    stages {

        stage('Récupération du code de la branche') {
            steps {
                git branch: 'master', url: 'https://github.com/AchrafBouslama/SopraHRProject.git'
            }
        } 
        
        stage("MAVEN BUILD") {
          steps {
            dir('backoffice') {

            sh 'mvn clean install -Dmaven.test.skip=true'
                              }
        }


    }




     stage("MOCKITO") {
              steps {
              dir('backoffice') {
                sh "mvn test -Dtest=com.example.achref.UserProfileServiceTest"
              }}
            }


 stage('SonarQube') {
            steps {
                 dir('backoffice') {
                // Provide SonarQube authentication using the provided token
                withCredentials([string(credentialsId: 'ParkWiseHR', variable: 'SONAR_TOKEN')]) {
                    sh "mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN"
                }
                 }
            }
        }


      stage('Publish Artifacts to Nexus') {
                  steps {
                      dir('backoffice') {
                          script {
                              sh 'mvn deploy -DaltDeploymentRepository=deploymentRepo::default::http://192.168.1.30:8081/repository/ParkWiseHR/'
                          }
                      }
                  }
      }



        stage("BUILD DOCKER IMAGE") {
                    steps {
                          dir('backoffice') {

                      sh 'docker build -t achrafbouslama/newimage:latest .'
                    }}
                  }
              stage('docker push backend'){
                               steps{
                                     dir('backoffice') {
                                   script{
                                       sh 'docker login -u "achrafbouslama" -p "e181JMT2239#" docker.io'
                                       sh 'docker push achrafbouslama/newimage:latest'

                                   }
                               }
                           }}
                           stage('Build Angular Docker Image') {
                                       steps {
                                           dir('front-ParkWise') {
                                               sh 'docker build -t achrafbouslama/angular-app:latest .'
                                           }
                                       }
                                   }
                                   stage('docker push Frontend'){
                                                                  steps{
                                                                        dir('front-ParkWise') {
                                                                      script{
                                                                          sh 'docker login -u "achrafbouslama" -p "e181JMT2239#" docker.io'
                                                                          sh 'docker push achrafbouslama/angular-app:latest'

                                                                      }
                                                                  }
                                                              }}

                      stage('docker compose') {
                          steps{
                                dir('backoffice') {
                              sh 'docker compose up -d'
                          }}
                      }







}
}
