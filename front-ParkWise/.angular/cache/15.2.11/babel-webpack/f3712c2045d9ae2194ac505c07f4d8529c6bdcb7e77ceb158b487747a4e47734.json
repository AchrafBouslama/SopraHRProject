{"ast":null,"code":"import { Bloc } from 'src/app/models/Bloc';\nimport { Etage } from 'src/app/models/etage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/BlocService/bloc.service\";\nimport * as i2 from \"src/app/services/EtageService/etage.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction AjouterBlocComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Identifiant du bloc requis!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterBlocComponent_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"L'identifiant du bloc ne peut contenir que des lettres et des chiffres.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterBlocComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AjouterBlocComponent_div_7_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, AjouterBlocComponent_div_7_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.controls[\"identifiantBloc\"].errors == null ? null : _r0.controls[\"identifiantBloc\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.controls[\"identifiantBloc\"].errors == null ? null : _r0.controls[\"identifiantBloc\"].errors[\"pattern\"]);\n  }\n}\nfunction AjouterBlocComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const etage_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", etage_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(etage_r5.numeroEtage);\n  }\n}\nexport class AjouterBlocComponent {\n  constructor(blocService, etageService, router) {\n    this.blocService = blocService;\n    this.etageService = etageService;\n    this.router = router;\n    this.bloc = new Bloc();\n    this.editbloc = new Bloc();\n    this.etage = new Etage();\n  }\n  ngOnInit() {\n    this.bloc.etage = new Etage();\n    this.etageService.displayEtage().subscribe(data => {\n      if (data) {\n        this.etages = data;\n        console.log(this.etages);\n      }\n    });\n  }\n  addOrEditeBloc(bloc) {\n    console.log(\"blocblocbloc\", bloc);\n    this.blocService.addBlocToEtage(bloc, bloc.etage.id).subscribe({\n      next: response => this.navigateToBlocList(),\n      error: error => console.log(error),\n      complete: () => this.bloc = new Bloc()\n    });\n  }\n  navigateToBlocList() {\n    this.router.navigate(['/admin/ListBloc']);\n  }\n  static #_ = this.ɵfac = function AjouterBlocComponent_Factory(t) {\n    return new (t || AjouterBlocComponent)(i0.ɵɵdirectiveInject(i1.BlocService), i0.ɵɵdirectiveInject(i2.EtageService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AjouterBlocComponent,\n    selectors: [[\"app-ajouter-bloc\"]],\n    decls: 16,\n    vars: 5,\n    consts: [[1, \"row\", \"myrow\"], [3, \"ngSubmit\"], [\"blocForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"identifiantBloc\"], [\"type\", \"text\", \"id\", \"identifiantBloc\", \"name\", \"identifiantBloc\", \"required\", \"\", \"pattern\", \"[a-zA-Z0-9]*\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"type\"], [\"name\", \"type\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"option\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mybutton\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [1, \"option\", 3, \"value\"]],\n    template: function AjouterBlocComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AjouterBlocComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.addOrEditeBloc(ctx.bloc);\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Identifiant_Bloc:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AjouterBlocComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.bloc.identifiantBloc = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, AjouterBlocComponent_div_7_Template, 3, 2, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Etage:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function AjouterBlocComponent_Template_select_ngModelChange_11_listener($event) {\n          return ctx.bloc.etage.id = $event;\n        });\n        i0.ɵɵtemplate(12, AjouterBlocComponent_option_12_Template, 2, 2, \"option\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"button\", 10);\n        i0.ɵɵtext(15, \"Enregistrer\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(2);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.bloc.identifiantBloc);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r0.controls[\"identifiantBloc\"].touched && _r0.controls[\"identifiantBloc\"].invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.bloc.etage.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.etages);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.PatternValidator, i5.NgModel, i5.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,IAAI,QAAQ,qBAAqB;AAC1C,SAASC,KAAK,QAAQ,sBAAsB;;;;;;;;;ICG5BC,2BAAuE;IAAAA,2CAA2B;IAAAA,iBAAM;;;;;IACxGA,2BAAsE;IAAAA,uFAAuE;IAAAA,iBAAM;;;;;IAFvJA,+BAAqI;IACjIA,4EAAwG;IACxGA,4EAAmJ;IACvJA,iBAAM;;;;;IAFIA,eAA+D;IAA/DA,iIAA+D;IAC/DA,eAA8D;IAA9DA,gIAA8D;;;;;IAOpEA,kCAAuE;IAAAA,YAAqB;IAAAA,iBAAS;;;;IAAjDA,mCAAkB;IAACA,eAAqB;IAArBA,0CAAqB;;;ADA5G,OAAM,MAAOC,oBAAoB;EAO/BC,YAAoBC,WAAwB,EAASC,YAAyB,EAASC,MAAa;IAAhF,gBAAW,GAAXF,WAAW;IAAsB,iBAAY,GAAZC,YAAY;IAAsB,WAAM,GAANC,MAAM;IAL7F,SAAI,GAAM,IAAIP,IAAI,EAAE;IAEpB,aAAQ,GAAM,IAAIA,IAAI,EAAE;IACxB,UAAK,GAAO,IAAIC,KAAK,EAAE;EAEiF;EAExGO,QAAQ;IACN,IAAI,CAACC,IAAI,CAACC,KAAK,GAAC,IAAIT,KAAK,EAAE;IAC3B,IAAI,CAACK,YAAY,CAACK,YAAY,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAChD,IAAIA,IAAI,EAAE;QACR,IAAI,CAACC,MAAM,GAACD,IAAI;QAChBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,MAAM,CAAC;;IAE5B,CAAC,CAAC;EACJ;EAEOG,cAAc,CAACR,IAAU;IAC9BM,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEP,IAAI,CAAC;IAEjC,IAAI,CAACJ,WAAW,CAACa,cAAc,CAACT,IAAI,EAACA,IAAI,CAACC,KAAK,CAACS,EAAE,CAAC,CAACP,SAAS,CAAC;MAC1DQ,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACC,kBAAkB,EAAE;MAC3CC,KAAK,EAAEA,KAAK,IAAIR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;MAClCC,QAAQ,EAAE,MAAM,IAAI,CAACf,IAAI,GAAG,IAAIT,IAAI;KACvC,CAAC;EACN;EACUsB,kBAAkB;IACtB,IAAI,CAACf,MAAM,CAACkB,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;EAC7C;EAAC;qBA9BUtB,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAAuB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCdjC5B,8BAAuB;QACMA;UAAA,OAAY6B,4BAAoB;QAAA,EAAC;QACtD7B,8BAAwB;QACSA,iCAAiB;QAAAA,iBAAQ;QACtDA,gCAAuJ;QAAxFA;UAAA;QAAA,EAAkC;QAAjGA,iBAAuJ;QACvJA,qEAGM;QACVA,iBAAM;QAENA,8BAAwB;QACFA,uBAAM;QAAAA,iBAAQ;QAChCA,kCAAqE;QAA5BA;UAAA;QAAA,EAA2B;QAChEA,6EAAqG;QACzGA,iBAAS;QAIbA,+BAAwB;QACiEA,4BAAW;QAAAA,iBAAS;;;;QAhB1CA,eAAkC;QAAlCA,kDAAkC;QAChEA,eAAkG;QAAlGA,yGAAkG;QAQ1FA,eAA2B;QAA3BA,2CAA2B;QACvBA,eAAS;QAATA,oCAAS;QAMCA,eAA6B;QAA7BA,sCAA6B","names":["Bloc","Etage","i0","AjouterBlocComponent","constructor","blocService","etageService","router","ngOnInit","bloc","etage","displayEtage","subscribe","data","etages","console","log","addOrEditeBloc","addBlocToEtage","id","next","response","navigateToBlocList","error","complete","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\abouslama\\Desktop\\SopraHRProject\\front-ParkWise\\src\\app\\parking\\list-bloc\\ajouter-bloc\\ajouter-bloc.component.ts","C:\\Users\\abouslama\\Desktop\\SopraHRProject\\front-ParkWise\\src\\app\\parking\\list-bloc\\ajouter-bloc\\ajouter-bloc.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Bloc } from 'src/app/models/Bloc';\nimport { Etage } from 'src/app/models/etage';\nimport { Parking } from 'src/app/models/parking';\nimport { BlocService } from 'src/app/services/BlocService/bloc.service';\nimport { EtageService } from 'src/app/services/EtageService/etage.service';\nimport { ParkService } from 'src/app/services/parkService/park.service';\n\n@Component({\n  selector: 'app-ajouter-bloc',\n  templateUrl: './ajouter-bloc.component.html',\n  styleUrls: ['./ajouter-bloc.component.css']\n})\nexport class AjouterBlocComponent {\n\n  bloc:Bloc=new Bloc(); \n  etages:any;\n  editbloc:Bloc=new Bloc();\n  etage:Etage=new Etage(); \n  id: any;\n  constructor(private blocService: BlocService,private etageService:EtageService,private router:Router) { }\n\n  ngOnInit() {\n    this.bloc.etage=new Etage();\n    this.etageService.displayEtage().subscribe(data => {\n      if (data) {\n        this.etages=data\n        console.log(this.etages);\n      }\n    });\n  }\n\n  public addOrEditeBloc(bloc: Bloc) {\n    console.log(\"blocblocbloc\", bloc);\n    \n    this.blocService.addBlocToEtage(bloc,bloc.etage.id).subscribe({\n        next: response => this.navigateToBlocList(),\n        error: error => console.log(error),\n        complete: () => this.bloc = new Bloc(),\n    });\n}\n  private navigateToBlocList(){\n      this.router.navigate(['/admin/ListBloc'])\n  }\n\n\n}\n","<div class=\"row myrow\">\n    <form #blocForm=\"ngForm\" (ngSubmit)=\"addOrEditeBloc(bloc)\">\n        <div class=\"form-group\">\n            <label for=\"identifiantBloc\">Identifiant_Bloc:</label>\n            <input type=\"text\" id=\"identifiantBloc\" name=\"identifiantBloc\" [(ngModel)]=\"bloc.identifiantBloc\" class=\"form-control\" required pattern=\"[a-zA-Z0-9]*\">\n            <div class=\"alert alert-danger\" *ngIf=\"blocForm.controls['identifiantBloc'].touched && blocForm.controls['identifiantBloc'].invalid\">\n                <div *ngIf=\"blocForm.controls['identifiantBloc'].errors?.['required']\">Identifiant du bloc requis!</div>\n                <div *ngIf=\"blocForm.controls['identifiantBloc'].errors?.['pattern']\">L'identifiant du bloc ne peut contenir que des lettres et des chiffres.</div>\n            </div>\n        </div>\n        \n        <div class=\"form-group\">\n            <label for=\"type\">Etage:</label>\n            <select class=\"form-control\" name=\"type\" [(ngModel)]=\"bloc.etage.id\">\n                <option class=\"option\" *ngFor=\"let etage of etages\" [value]=\"etage.id\">{{etage.numeroEtage}}</option>\n            </select>\n        </div>\n        \n        <!-- Ajouter d'autres champs si nécessaire -->\n        <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-primary mybutton\" [disabled]=\"blocForm.invalid\">Enregistrer</button>\n        </div>\n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}