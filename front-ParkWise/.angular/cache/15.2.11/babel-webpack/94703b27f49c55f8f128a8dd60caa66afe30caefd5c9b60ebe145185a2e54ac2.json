{"ast":null,"code":"import { Bloc } from 'src/app/models/Bloc';\nimport { PlaceParking } from 'src/app/models/PlaceParking';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/BlocService/bloc.service\";\nimport * as i2 from \"src/app/services/PlaceParkService/place-park.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ModifierPlaceparkingComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Num\\u00E9ro de place requis!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModifierPlaceparkingComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, ModifierPlaceparkingComponent_div_7_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.controls[\"numeroPlace\"].errors == null ? null : _r0.controls[\"numeroPlace\"].errors[\"required\"]);\n  }\n}\nfunction ModifierPlaceparkingComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bloc_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", bloc_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(bloc_r4.identifiantBloc);\n  }\n}\nexport class ModifierPlaceparkingComponent {\n  constructor(blocService, placeParkingService, router, route) {\n    this.blocService = blocService;\n    this.placeParkingService = placeParkingService;\n    this.router = router;\n    this.route = route;\n    this.placeparking = new PlaceParking();\n    this.editplaceparking = new PlaceParking();\n    this.bloc = new Bloc();\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const idParam = params.get('id');\n      if (idParam) {\n        this.id = +idParam;\n        this.loadblocs(() => {\n          this.loadPlaceParking(this.id);\n        });\n      }\n    });\n  }\n  loadPlaceParking(id) {\n    this.placeParkingService.getPlaceParkingById(id).subscribe({\n      next: data => {\n        console.log(data);\n        this.placeparking = data;\n        this.bloc = data.bloc;\n        this.placeparking.bloc.id = data.bloc.id;\n        console.log(this.bloc);\n      }\n    });\n  }\n  loadblocs(callback) {\n    this.blocService.displayBloc().subscribe({\n      next: data => {\n        this.blocs = data;\n        if (callback) {\n          callback();\n        }\n      },\n      error: error => {\n        console.error('Erreur lors du chargement des blocs :', error);\n      }\n    });\n  }\n  addOrEditePlaceParking(placeparking) {\n    this.placeParkingService.updatePlaceParking(this.id, placeparking).subscribe({\n      next: response => this.navigateToBlocList(),\n      error: error => {\n        alert('Vos avez dépassé la capacité total du Parking.Veuillez vérifier vos données ');\n        console.error('Erreur lors de la mise à jour de l\\'étage : ', error);\n      },\n      complete: () => this.bloc = new Bloc()\n    });\n  }\n  navigateToBlocList() {\n    this.router.navigate(['/admin/ListPlaceParking']);\n  }\n  static #_ = this.ɵfac = function ModifierPlaceparkingComponent_Factory(t) {\n    return new (t || ModifierPlaceparkingComponent)(i0.ɵɵdirectiveInject(i1.BlocService), i0.ɵɵdirectiveInject(i2.PlaceParkService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierPlaceparkingComponent,\n    selectors: [[\"app-modifier-placeparking\"]],\n    decls: 28,\n    vars: 8,\n    consts: [[1, \"row\", \"myrow\"], [3, \"ngSubmit\"], [\"placeParkingForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"numeroPlace\"], [\"type\", \"text\", \"id\", \"numeroPlace\", \"name\", \"numeroPlace\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"form-group\", 2, \"margin-top\", \"10px\"], [\"for\", \"estAccessibleHandicap\"], [\"type\", \"checkbox\", \"id\", \"estAccessibleHandicap\", \"name\", \"estAccessibleHandicap\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"estReservee\"], [\"type\", \"checkbox\", \"id\", \"estReservee\", \"name\", \"estReservee\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"typePlace\"], [\"type\", \"text\", \"id\", \"typePlace\", \"name\", \"typePlace\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"bloc_id\"], [\"name\", \"bloc_id\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"option\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mybutton\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [1, \"option\", 3, \"value\"]],\n    template: function ModifierPlaceparkingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ModifierPlaceparkingComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.addOrEditePlaceParking(ctx.placeparking);\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Num\\u00E9ro de place:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierPlaceparkingComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.placeparking.numeroPlace = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, ModifierPlaceparkingComponent_div_7_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Accessible aux handicap\\u00E9s:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierPlaceparkingComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.placeparking.estAccessibleHandicap = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"R\\u00E9serv\\u00E9e:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierPlaceparkingComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.placeparking.estReservee = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 12);\n        i0.ɵɵtext(18, \"Type de place:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierPlaceparkingComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.placeparking.typePlace = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 14);\n        i0.ɵɵtext(22, \"Bloc:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"select\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierPlaceparkingComponent_Template_select_ngModelChange_23_listener($event) {\n          return ctx.placeparking.bloc.id = $event;\n        });\n        i0.ɵɵtemplate(24, ModifierPlaceparkingComponent_option_24_Template, 2, 2, \"option\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\", 3)(26, \"button\", 17);\n        i0.ɵɵtext(27, \"Enregistrer\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(2);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.placeparking.numeroPlace);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r0.controls[\"numeroPlace\"].touched && _r0.controls[\"numeroPlace\"].invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.placeparking.estAccessibleHandicap);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.placeparking.estReservee);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.placeparking.typePlace);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.placeparking.bloc.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.blocs);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.CheckboxControlValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Bloc","PlaceParking","i0","ModifierPlaceparkingComponent","constructor","blocService","placeParkingService","router","route","ngOnInit","paramMap","subscribe","params","idParam","get","id","loadblocs","loadPlaceParking","getPlaceParkingById","next","data","console","log","placeparking","bloc","callback","displayBloc","blocs","error","addOrEditePlaceParking","updatePlaceParking","response","navigateToBlocList","alert","complete","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\abouslama\\Desktop\\SopraHRProject\\front-ParkWise\\src\\app\\parking\\list-placeparking\\modifier-placeparking\\modifier-placeparking.component.ts","C:\\Users\\abouslama\\Desktop\\SopraHRProject\\front-ParkWise\\src\\app\\parking\\list-placeparking\\modifier-placeparking\\modifier-placeparking.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Bloc } from 'src/app/models/Bloc';\nimport { PlaceParking } from 'src/app/models/PlaceParking';\nimport { Parking } from 'src/app/models/parking';\nimport { BlocService } from 'src/app/services/BlocService/bloc.service';\nimport { EtageService } from 'src/app/services/EtageService/etage.service';\nimport { PlaceParkService } from 'src/app/services/PlaceParkService/place-park.service';\n\n@Component({\n  selector: 'app-modifier-placeparking',\n  templateUrl: './modifier-placeparking.component.html',\n  styleUrls: ['./modifier-placeparking.component.css']\n})\nexport class ModifierPlaceparkingComponent {\n  placeparking: PlaceParking = new PlaceParking(); \n  blocs: any;\n  editplaceparking: PlaceParking = new PlaceParking();\n  bloc: Bloc = new Bloc(); \n  id: any;\n\n  constructor(private blocService: BlocService, private placeParkingService: PlaceParkService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const idParam = params.get('id');\n      if (idParam) {\n        this.id = +idParam; \n        this.loadblocs(() => {\n          this.loadPlaceParking(this.id);\n        });\n      }\n    });\n  }\n  \n\n  loadPlaceParking(id: number): void {\n    this.placeParkingService.getPlaceParkingById(id).subscribe({\n      next:(data) => {\n        console.log(data);\n        this.placeparking = data;\n        this.bloc = data.bloc;\n        this.placeparking.bloc.id = data.bloc.id; \n        console.log(this.bloc);\n      },\n    })\n  }\n  \n\n  loadblocs(callback?: Function): void {\n    this.blocService.displayBloc().subscribe({\n      next: (data: Parking[]) => {\n        this.blocs = data;\n        if (callback) {\n          callback(); \n        }\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement des blocs :', error);\n      }\n    });\n  }\n\n  public addOrEditePlaceParking(placeparking: PlaceParking) {\n    this.placeParkingService.updatePlaceParking(this.id, placeparking).subscribe({\n      next: response => this.navigateToBlocList(),\n      error: error => {alert('Vos avez dépassé la capacité total du Parking.Veuillez vérifier vos données ');\n                      console.error('Erreur lors de la mise à jour de l\\'étage : ', error);},\n      complete: () => this.bloc = new Bloc(),\n    });\n  }\n  \n  private navigateToBlocList(){\n    this.router.navigate(['/admin/ListPlaceParking'])\n  }\n}\n","<div class=\"row myrow\">\n    <form #placeParkingForm=\"ngForm\" (ngSubmit)=\"addOrEditePlaceParking(placeparking)\">\n        <div class=\"form-group\">\n            <label for=\"numeroPlace\">Numéro de place:</label>\n            <input type=\"text\" id=\"numeroPlace\" name=\"numeroPlace\" [(ngModel)]=\"placeparking.numeroPlace\" class=\"form-control\" required>\n            <div class=\"alert alert-danger\" *ngIf=\"placeParkingForm.controls['numeroPlace'].touched && placeParkingForm.controls['numeroPlace'].invalid\">\n                <div *ngIf=\"placeParkingForm.controls['numeroPlace'].errors?.['required']\">Numéro de place requis!</div>\n            </div>\n        </div>\n        <div class=\"form-group\" style=\"margin-top: 10px;\">\n            <label for=\"estAccessibleHandicap\">Accessible aux handicapés:</label>\n            <input type=\"checkbox\" id=\"estAccessibleHandicap\" name=\"estAccessibleHandicap\" [ngModel]=\"placeparking.estAccessibleHandicap\" (ngModelChange)=\"placeparking.estAccessibleHandicap = $event\">\n        </div>\n        <div class=\"form-group\" style=\"margin-top: 10px;\">\n            <label for=\"estReservee\">Réservée:</label>\n            <input type=\"checkbox\" id=\"estReservee\" name=\"estReservee\" [ngModel]=\"placeparking.estReservee\" (ngModelChange)=\"placeparking.estReservee = $event\">\n        </div>\n        \n        \n        \n        <div class=\"form-group\">\n            <label for=\"typePlace\">Type de place:</label>\n            <input type=\"text\" id=\"typePlace\" name=\"typePlace\" [(ngModel)]=\"placeparking.typePlace\" class=\"form-control\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"bloc_id\">Bloc:</label>\n            <select class=\"form-control\" name=\"bloc_id\" [(ngModel)]=\"placeparking.bloc.id\">\n                <option class=\"option\" *ngFor=\"let bloc of blocs\" [value]=\"bloc.id\">{{bloc.identifiantBloc}}</option>\n            </select>\n        </div>\n        <!-- Ajouter d'autres champs si nécessaire -->\n        <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-primary mybutton\" [disabled]=\"placeParkingForm.invalid\">Enregistrer</button>\n        </div>\n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}