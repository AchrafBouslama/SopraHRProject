{"ast":null,"code":"import { Bloc } from 'src/app/models/Bloc';\nimport { Etage } from 'src/app/models/etage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/BlocService/bloc.service\";\nimport * as i2 from \"src/app/services/EtageService/etage.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ModifierBlocComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Identifiant du bloc requis!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModifierBlocComponent_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"L'identifiant du bloc ne peut contenir que des lettres et des chiffres.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModifierBlocComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, ModifierBlocComponent_div_7_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, ModifierBlocComponent_div_7_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.controls[\"identifiantBloc\"].errors == null ? null : _r0.controls[\"identifiantBloc\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.controls[\"identifiantBloc\"].errors == null ? null : _r0.controls[\"identifiantBloc\"].errors[\"pattern\"]);\n  }\n}\nfunction ModifierBlocComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const etage_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", etage_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(etage_r5.numeroEtage);\n  }\n}\nexport class ModifierBlocComponent {\n  constructor(blocService, etageService, router, route) {\n    this.blocService = blocService;\n    this.etageService = etageService;\n    this.router = router;\n    this.route = route;\n    this.bloc = new Bloc();\n    this.editbloc = new Bloc();\n    this.etage = new Etage();\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const idParam = params.get('id');\n      if (idParam) {\n        this.id = +idParam;\n        this.loadetages(() => {\n          this.loadBloc(this.id);\n        });\n      }\n    });\n  }\n  loadBloc(id) {\n    this.blocService.getBlocById(id).subscribe({\n      next: data => {\n        console.log(data);\n        this.bloc = data;\n        this.etage = data.etage;\n        this.bloc.etage.id = data.etage.id;\n        console.log(this.etage);\n      }\n    });\n  }\n  loadetages(callback) {\n    this.etageService.displayEtage().subscribe({\n      next: data => {\n        this.etages = data;\n        if (callback) {\n          callback();\n        }\n      },\n      error: error => {\n        console.error('Erreur lors du chargement des parkings :', error);\n      }\n    });\n  }\n  addOrEditeBloc(bloc) {\n    this.blocService.updateBloc(this.id, bloc).subscribe({\n      next: response => this.navigateToBlocList(),\n      error: error => {\n        alert('Vos avez dépassé la capacité total du Parking.Veuillez vérifier vos données ');\n        console.error('Erreur lors de la mise à jour de l\\'étage : ', error);\n      },\n      complete: () => this.bloc = new Bloc()\n    });\n  }\n  navigateToBlocList() {\n    this.router.navigate(['/admin/ListBloc']);\n  }\n  static #_ = this.ɵfac = function ModifierBlocComponent_Factory(t) {\n    return new (t || ModifierBlocComponent)(i0.ɵɵdirectiveInject(i1.BlocService), i0.ɵɵdirectiveInject(i2.EtageService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierBlocComponent,\n    selectors: [[\"app-modifier-bloc\"]],\n    decls: 16,\n    vars: 5,\n    consts: [[1, \"row\", \"myrow\"], [3, \"ngSubmit\"], [\"blocForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"identifiantBloc\"], [\"type\", \"text\", \"id\", \"identifiantBloc\", \"name\", \"identifiantBloc\", \"required\", \"\", \"pattern\", \"[a-zA-Z0-9]*\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"type\"], [\"name\", \"type\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"option\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mybutton\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [1, \"option\", 3, \"value\"]],\n    template: function ModifierBlocComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ModifierBlocComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.addOrEditeBloc(ctx.bloc);\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Identifiant_Bloc:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierBlocComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.bloc.identifiantBloc = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, ModifierBlocComponent_div_7_Template, 3, 2, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Etage:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierBlocComponent_Template_select_ngModelChange_11_listener($event) {\n          return ctx.bloc.etage.id = $event;\n        });\n        i0.ɵɵtemplate(12, ModifierBlocComponent_option_12_Template, 2, 2, \"option\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"button\", 10);\n        i0.ɵɵtext(15, \"Enregistrer\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(2);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.bloc.identifiantBloc);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r0.controls[\"identifiantBloc\"].touched && _r0.controls[\"identifiantBloc\"].invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.bloc.etage.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.etages);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.PatternValidator, i5.NgModel, i5.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,IAAI,QAAQ,qBAAqB;AAC1C,SAASC,KAAK,QAAQ,sBAAsB;;;;;;;;;ICG5BC,2BAAuE;IAAAA,2CAA2B;IAAAA,iBAAM;;;;;IACxGA,2BAAsE;IAAAA,uFAAuE;IAAAA,iBAAM;;;;;IAFvJA,+BAAqI;IACjIA,6EAAwG;IACxGA,6EAAmJ;IACvJA,iBAAM;;;;;IAFIA,eAA+D;IAA/DA,iIAA+D;IAC/DA,eAA8D;IAA9DA,gIAA8D;;;;;IAOpEA,kCAAuE;IAAAA,YAAqB;IAAAA,iBAAS;;;;IAAjDA,mCAAkB;IAACA,eAAqB;IAArBA,0CAAqB;;;ADA5G,OAAM,MAAOC,qBAAqB;EAOhCC,YAAoBC,WAAuB,EAASC,YAA0B,EAASC,MAAa,EAASC,KAAoB;IAA7G,gBAAW,GAAXH,WAAW;IAAqB,iBAAY,GAAZC,YAAY;IAAuB,WAAM,GAANC,MAAM;IAAgB,UAAK,GAALC,KAAK;IANlH,SAAI,GAAM,IAAIR,IAAI,EAAE;IAEpB,aAAQ,GAAM,IAAIA,IAAI,EAAE;IACxB,UAAK,GAAO,IAAIC,KAAK,EAAE;EAGgH;EAEvIQ,QAAQ;IAEN,IAAI,CAACD,KAAK,CAACE,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC;MAChC,IAAID,OAAO,EAAE;QACX,IAAI,CAACE,EAAE,GAAG,CAACF,OAAO;QAClB,IAAI,CAACG,UAAU,CAAC,MAAK;UACnB,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACF,EAAE,CAAC;QACxB,CAAC,CAAC;;IAEN,CAAC,CAAC;EACJ;EAGAE,QAAQ,CAACF,EAAS;IAChB,IAAI,CAACV,WAAW,CAACa,WAAW,CAACH,EAAE,CAAC,CAACJ,SAAS,CAAC;MACzCQ,IAAI,EAAEC,IAAI,IAAG;QACXC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAI,CAACG,IAAI,GAAGH,IAAI;QAChB,IAAI,CAACI,KAAK,GAAGJ,IAAI,CAACI,KAAK;QACvB,IAAI,CAACD,IAAI,CAACC,KAAK,CAACT,EAAE,GAAGK,IAAI,CAACI,KAAK,CAACT,EAAE;QAClCM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,KAAK,CAAC;MACzB;KACD,CAAC;EACJ;EAGAR,UAAU,CAACS,QAAmB;IAC5B,IAAI,CAACnB,YAAY,CAACoB,YAAY,EAAE,CAACf,SAAS,CAAC;MACzCQ,IAAI,EAAGC,IAAa,IAAI;QACtB,IAAI,CAACO,MAAM,GAAGP,IAAI;QAClB,IAAIK,QAAQ,EAAE;UACZA,QAAQ,EAAE;;MAEd,CAAC;MACDG,KAAK,EAAGA,KAAK,IAAI;QACfP,OAAO,CAACO,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE;KACD,CAAC;EACJ;EAEOC,cAAc,CAACN,IAAU;IAC9B,IAAI,CAAClB,WAAW,CAACyB,UAAU,CAAC,IAAI,CAACf,EAAE,EAACQ,IAAI,CAAC,CAACZ,SAAS,CAAC;MAClDQ,IAAI,EAAEY,QAAQ,IAAI,IAAI,CAACC,kBAAkB,EAAE;MAC3CJ,KAAK,EAAEA,KAAK,IAAG;QAAEK,KAAK,CAAC,8EAA8E,CAAC;QACtGZ,OAAO,CAACO,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MAAC,CAAC;MACtEM,QAAQ,EAAE,MAAM,IAAI,CAACX,IAAI,GAAG,IAAIvB,IAAI;KACvC,CAAC;EAEJ;EACQgC,kBAAkB;IACxB,IAAI,CAACzB,MAAM,CAAC4B,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;EAC3C;EAAC;qBA7DYhC,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAAiC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCdlCtC,8BAAuB;QACMA;UAAA,OAAYuC,4BAAoB;QAAA,EAAC;QACtDvC,8BAAwB;QACSA,iCAAiB;QAAAA,iBAAQ;QACtDA,gCAAuJ;QAAxFA;UAAA;QAAA,EAAkC;QAAjGA,iBAAuJ;QACvJA,sEAGM;QACVA,iBAAM;QAENA,8BAAwB;QACFA,uBAAM;QAAAA,iBAAQ;QAChCA,kCAAqE;QAA5BA;UAAA;QAAA,EAA2B;QAChEA,8EAAqG;QACzGA,iBAAS;QAIbA,+BAAwB;QACiEA,4BAAW;QAAAA,iBAAS;;;;QAhB1CA,eAAkC;QAAlCA,kDAAkC;QAChEA,eAAkG;QAAlGA,yGAAkG;QAQ1FA,eAA2B;QAA3BA,2CAA2B;QACvBA,eAAS;QAATA,oCAAS;QAMCA,eAA6B;QAA7BA,sCAA6B","names":["Bloc","Etage","i0","ModifierBlocComponent","constructor","blocService","etageService","router","route","ngOnInit","paramMap","subscribe","params","idParam","get","id","loadetages","loadBloc","getBlocById","next","data","console","log","bloc","etage","callback","displayEtage","etages","error","addOrEditeBloc","updateBloc","response","navigateToBlocList","alert","complete","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\abouslama\\Desktop\\SopraHRProject\\front-ParkWise\\src\\app\\parking\\list-bloc\\modifier-bloc\\modifier-bloc.component.ts","C:\\Users\\abouslama\\Desktop\\SopraHRProject\\front-ParkWise\\src\\app\\parking\\list-bloc\\modifier-bloc\\modifier-bloc.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Bloc } from 'src/app/models/Bloc';\nimport { Etage } from 'src/app/models/etage';\nimport { Parking } from 'src/app/models/parking';\nimport { BlocService } from 'src/app/services/BlocService/bloc.service';\nimport { EtageService } from 'src/app/services/EtageService/etage.service';\nimport { ParkService } from 'src/app/services/parkService/park.service';\n\n@Component({\n  selector: 'app-modifier-bloc',\n  templateUrl: './modifier-bloc.component.html',\n  styleUrls: ['./modifier-bloc.component.css']\n})\nexport class ModifierBlocComponent {\n  bloc:Bloc=new Bloc(); \n  etages:any;\n  editbloc:Bloc=new Bloc();\n  etage:Etage=new Etage(); \n  id: any;\n\n  constructor(private blocService:BlocService,private etageService: EtageService,private router:Router,private route:ActivatedRoute  ) { }\n\n  ngOnInit(): void {\n  \n    this.route.paramMap.subscribe(params => {\n      const idParam = params.get('id');\n      if (idParam) {\n        this.id = +idParam; \n        this.loadetages(() => {\n          this.loadBloc(this.id);\n        });\n      }\n    });\n  }\n  \n\n  loadBloc(id:number):void{\n    this.blocService.getBlocById(id).subscribe({\n      next:(data)=>{\n        console.log(data);\n        this.bloc = data;\n        this.etage = data.etage;\n        this.bloc.etage.id = data.etage.id; \n        console.log(this.etage);\n      },\n    })\n  }\n  \n\n  loadetages(callback?: Function): void {\n    this.etageService.displayEtage().subscribe({\n      next: (data: Etage[]) => {\n        this.etages = data;\n        if (callback) {\n          callback(); \n        }\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement des parkings :', error);\n      }\n    });\n  }\n\n  public addOrEditeBloc(bloc: Bloc) {\n    this.blocService.updateBloc(this.id,bloc).subscribe({\n      next: response => this.navigateToBlocList(),\n      error: error => {alert('Vos avez dépassé la capacité total du Parking.Veuillez vérifier vos données ');\n      console.error('Erreur lors de la mise à jour de l\\'étage : ', error);},\n      complete: () => this.bloc = new Bloc(),\n  });\n  \n}\nprivate navigateToBlocList(){\n  this.router.navigate(['/admin/ListBloc'])\n}\n\n}\n","<div class=\"row myrow\">\n    <form #blocForm=\"ngForm\" (ngSubmit)=\"addOrEditeBloc(bloc)\">\n        <div class=\"form-group\">\n            <label for=\"identifiantBloc\">Identifiant_Bloc:</label>\n            <input type=\"text\" id=\"identifiantBloc\" name=\"identifiantBloc\" [(ngModel)]=\"bloc.identifiantBloc\" class=\"form-control\" required pattern=\"[a-zA-Z0-9]*\">\n            <div class=\"alert alert-danger\" *ngIf=\"blocForm.controls['identifiantBloc'].touched && blocForm.controls['identifiantBloc'].invalid\">\n                <div *ngIf=\"blocForm.controls['identifiantBloc'].errors?.['required']\">Identifiant du bloc requis!</div>\n                <div *ngIf=\"blocForm.controls['identifiantBloc'].errors?.['pattern']\">L'identifiant du bloc ne peut contenir que des lettres et des chiffres.</div>\n            </div>\n        </div>\n        \n        <div class=\"form-group\">\n            <label for=\"type\">Etage:</label>\n            <select class=\"form-control\" name=\"type\" [(ngModel)]=\"bloc.etage.id\">\n                <option class=\"option\" *ngFor=\"let etage of etages\" [value]=\"etage.id\">{{etage.numeroEtage}}</option>\n            </select>\n        </div>\n        \n        <!-- Ajouter d'autres champs si nécessaire -->\n        <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-primary mybutton\" [disabled]=\"blocForm.invalid\">Enregistrer</button>\n        </div>\n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}