{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/parkService/park.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/file.service\";\nimport * as i5 from \"@angular/common\";\nfunction ModifierParkingComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Nom is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModifierParkingComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Adresse is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModifierParkingComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Capacit\\u00E9 Totale is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModifierParkingComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Description is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModifierParkingComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Latitude is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModifierParkingComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Longitude is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModifierParkingComponent_img_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 21);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r6.imagePreview, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class ModifierParkingComponent {\n  constructor(formBuilder, parkService, router, route, fileService) {\n    this.formBuilder = formBuilder;\n    this.parkService = parkService;\n    this.router = router;\n    this.route = route;\n    this.fileService = fileService;\n    this.imagePreview = null;\n    this.fileToUpload = null;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.loadParking(this.id);\n    });\n    this.parkingForm = this.formBuilder.group({\n      nom: ['', Validators.required],\n      adresse: ['', Validators.required],\n      description: ['', Validators.required],\n      capaciteTotale: ['', [Validators.required, Validators.min(0)]],\n      latitude: ['', [Validators.required, Validators.min(-90), Validators.max(90)]],\n      longitude: ['', [Validators.required, Validators.min(-180), Validators.max(180)]]\n    });\n  }\n  loadParking(id) {\n    this.parkService.getParkingById(id).subscribe(data => {\n      this.parkingForm.patchValue(data);\n      this.imagePreview = data.image; // Assuming the API returns a path or a base64 string\n    });\n  }\n\n  onFileSelected(event) {\n    const element = event.currentTarget;\n    let fileList = element.files;\n    if (fileList) {\n      this.fileToUpload = fileList[0];\n      const reader = new FileReader();\n      reader.onload = () => this.imagePreview = reader.result;\n      reader.readAsDataURL(this.fileToUpload);\n    }\n  }\n  onSubmit() {\n    if (this.parkingForm.valid) {\n      this.uploadFileAndUpdateParking();\n    } else {\n      console.error('Form is invalid');\n    }\n  }\n  uploadFileAndUpdateParking() {\n    if (this.fileToUpload) {\n      this.fileService.uploadFile(this.fileToUpload).subscribe(uploadResponse => {\n        this.updateParking();\n      }, uploadError => {\n        console.error('Error uploading file:', uploadError);\n      });\n    } else {\n      this.updateParking();\n    }\n  }\n  updateParking() {\n    const updatedParking = {\n      id: this.id,\n      ...this.parkingForm.value,\n      image: this.fileToUpload ? this.fileToUpload.name : this.imagePreview // Handle cases where the image may not change\n    };\n\n    this.parkService.addParking(updatedParking).subscribe(response => {\n      this.router.navigate(['/admin/listParking']);\n    }, error => {\n      console.error('Error updating parking:', error);\n    });\n  }\n  static #_ = this.ɵfac = function ModifierParkingComponent_Factory(t) {\n    return new (t || ModifierParkingComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ParkService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.FileService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierParkingComponent,\n    selectors: [[\"app-modifier-parking\"]],\n    decls: 40,\n    vars: 9,\n    consts: [[1, \"row\", \"myrow\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"nom\"], [\"type\", \"text\", \"id\", \"nom\", \"name\", \"nom\", \"formControlName\", \"nom\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"adresse\"], [\"type\", \"text\", \"id\", \"adresse\", \"name\", \"adresse\", \"formControlName\", \"adresse\", 1, \"form-control\"], [\"for\", \"capaciteTotale\"], [\"type\", \"number\", \"id\", \"capaciteTotale\", \"name\", \"capaciteTotale\", \"formControlName\", \"capaciteTotale\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"latitude\"], [\"type\", \"number\", \"id\", \"latitude\", \"name\", \"latitude\", \"formControlName\", \"latitude\", 1, \"form-control\"], [\"for\", \"longitude\"], [\"type\", \"number\", \"id\", \"longitude\", \"name\", \"longitude\", \"formControlName\", \"longitude\", 1, \"form-control\"], [\"for\", \"image\"], [\"type\", \"file\", \"id\", \"image\", 1, \"form-control\", 3, \"change\"], [\"class\", \"thumbnail-preview\", 3, \"src\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mybutton\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [1, \"thumbnail-preview\", 3, \"src\"]],\n    template: function ModifierParkingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ModifierParkingComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Nom:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵtemplate(6, ModifierParkingComponent_div_6_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Adresse:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵtemplate(11, ModifierParkingComponent_div_11_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Capacit\\u00E9 Totale:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵtemplate(16, ModifierParkingComponent_div_16_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 2)(18, \"label\", 10);\n        i0.ɵɵtext(19, \"Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"textarea\", 11);\n        i0.ɵɵtemplate(21, ModifierParkingComponent_div_21_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\", 12);\n        i0.ɵɵtext(24, \"Latitude:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 13);\n        i0.ɵɵtemplate(26, ModifierParkingComponent_div_26_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 2)(28, \"label\", 14);\n        i0.ɵɵtext(29, \"Longitude:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 15);\n        i0.ɵɵtemplate(31, ModifierParkingComponent_div_31_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 2)(33, \"label\", 16);\n        i0.ɵɵtext(34, \"Image\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"input\", 17);\n        i0.ɵɵlistener(\"change\", function ModifierParkingComponent_Template_input_change_35_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(36, ModifierParkingComponent_img_36_Template, 1, 1, \"img\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 2)(38, \"button\", 19);\n        i0.ɵɵtext(39, \"Update\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_5_0;\n        let tmp_6_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.parkingForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.parkingForm.get(\"nom\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx.parkingForm.get(\"nom\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.parkingForm.get(\"adresse\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.parkingForm.get(\"adresse\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"required\"]));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.parkingForm.get(\"capaciteTotale\")) == null ? null : tmp_3_0.touched) && ((tmp_3_0 = ctx.parkingForm.get(\"capaciteTotale\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"required\"]));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.parkingForm.get(\"description\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.parkingForm.get(\"description\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"required\"]));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.parkingForm.get(\"latitude\")) == null ? null : tmp_5_0.touched) && ((tmp_5_0 = ctx.parkingForm.get(\"latitude\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors[\"required\"]));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.parkingForm.get(\"longitude\")) == null ? null : tmp_6_0.touched) && ((tmp_6_0 = ctx.parkingForm.get(\"longitude\")) == null ? null : tmp_6_0.errors == null ? null : tmp_6_0.errors[\"required\"]));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.imagePreview);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.parkingForm.invalid);\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","ModifierParkingComponent","constructor","formBuilder","parkService","router","route","fileService","ngOnInit","params","subscribe","id","loadParking","parkingForm","group","nom","required","adresse","description","capaciteTotale","min","latitude","max","longitude","getParkingById","data","patchValue","imagePreview","image","onFileSelected","event","element","currentTarget","fileList","files","fileToUpload","reader","FileReader","onload","result","readAsDataURL","onSubmit","valid","uploadFileAndUpdateParking","console","error","uploadFile","uploadResponse","updateParking","uploadError","updatedParking","value","name","addParking","response","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\abouslama\\Desktop\\SopraHRProject\\front-ParkWise\\src\\app\\parking\\list-parking\\modifier-parking\\modifier-parking.component.ts","C:\\Users\\abouslama\\Desktop\\SopraHRProject\\front-ParkWise\\src\\app\\parking\\list-parking\\modifier-parking\\modifier-parking.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Parking } from 'src/app/models/parking';\nimport { FileService } from 'src/app/services/file.service';\nimport { ParkService } from 'src/app/services/parkService/park.service';\n\n@Component({\n  selector: 'app-modifier-parking',\n  templateUrl: './modifier-parking.component.html',\n  styleUrls: ['./modifier-parking.component.css']\n})\nexport class ModifierParkingComponent implements OnInit {\n  parkingForm!: FormGroup;\n  imagePreview: string | ArrayBuffer | null = null;\n  fileToUpload: File | null = null;\n  id!: number;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private parkService: ParkService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fileService: FileService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.loadParking(this.id);\n    });\n\n    this.parkingForm = this.formBuilder.group({\n      nom: ['', Validators.required],\n      adresse: ['', Validators.required],\n      description: ['', Validators.required],\n      capaciteTotale: ['', [Validators.required, Validators.min(0)]],\n      latitude: ['', [Validators.required, Validators.min(-90), Validators.max(90)]],\n      longitude: ['', [Validators.required, Validators.min(-180), Validators.max(180)]]\n    });\n  }\n\n  loadParking(id: number) {\n    this.parkService.getParkingById(id).subscribe(data => {\n      this.parkingForm.patchValue(data);\n      this.imagePreview = data.image;  // Assuming the API returns a path or a base64 string\n    });\n  }\n\n  onFileSelected(event: Event): void {\n    const element = event.currentTarget as HTMLInputElement;\n    let fileList: FileList | null = element.files;\n    if (fileList) {\n      this.fileToUpload = fileList[0];\n      const reader = new FileReader();\n      reader.onload = () => this.imagePreview = reader.result;\n      reader.readAsDataURL(this.fileToUpload);\n    }\n  }\n\n  onSubmit() {\n    if (this.parkingForm.valid) {\n      this.uploadFileAndUpdateParking();\n    } else {\n      console.error('Form is invalid');\n    }\n  }\n\n  uploadFileAndUpdateParking() {\n    if (this.fileToUpload) {\n      this.fileService.uploadFile(this.fileToUpload).subscribe(\n        uploadResponse => {\n          this.updateParking();\n        },\n        uploadError => {\n          console.error('Error uploading file:', uploadError);\n        }\n      );\n    } else {\n      this.updateParking();\n    }\n  }\n\n  updateParking() {\n    const updatedParking: Parking = {\n      id:this.id,\n      ...this.parkingForm.value,\n      \n      image: this.fileToUpload ? this.fileToUpload.name : this.imagePreview  // Handle cases where the image may not change\n    };\n    this.parkService.addParking(updatedParking).subscribe(\n      response => {\n        this.router.navigate(['/admin/listParking']);\n      },\n      error => {\n        console.error('Error updating parking:', error);\n      }\n    );\n  }\n}\n","<div class=\"row myrow\">\n    <form [formGroup]=\"parkingForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label for=\"nom\">Nom:</label>\n            <input type=\"text\" id=\"nom\" name=\"nom\" formControlName=\"nom\" class=\"form-control\">\n            <div class=\"alert alert-danger\" *ngIf=\"parkingForm.get('nom')?.touched && parkingForm.get('nom')?.errors?.['required']\">\n                Nom is required!\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"adresse\">Adresse:</label>\n            <input type=\"text\" id=\"adresse\" name=\"adresse\" formControlName=\"adresse\" class=\"form-control\">\n            <div class=\"alert alert-danger\" *ngIf=\"parkingForm.get('adresse')?.touched && parkingForm.get('adresse')?.errors?.['required']\">\n                Adresse is required!\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"capaciteTotale\">Capacité Totale:</label>\n            <input type=\"number\" id=\"capaciteTotale\" name=\"capaciteTotale\" formControlName=\"capaciteTotale\" class=\"form-control\">\n            <div class=\"alert alert-danger\" *ngIf=\"parkingForm.get('capaciteTotale')?.touched && parkingForm.get('capaciteTotale')?.errors?.['required']\">\n                Capacité Totale is required!\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"description\">Description:</label>\n            <textarea id=\"description\" name=\"description\" formControlName=\"description\" class=\"form-control\"></textarea>\n            <div class=\"alert alert-danger\" *ngIf=\"parkingForm.get('description')?.touched && parkingForm.get('description')?.errors?.['required']\">\n                Description is required!\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"latitude\">Latitude:</label>\n            <input type=\"number\" id=\"latitude\" name=\"latitude\" formControlName=\"latitude\" class=\"form-control\">\n            <div class=\"alert alert-danger\" *ngIf=\"parkingForm.get('latitude')?.touched && parkingForm.get('latitude')?.errors?.['required']\">\n                Latitude is required!\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"longitude\">Longitude:</label>\n            <input type=\"number\" id=\"longitude\" name=\"longitude\" formControlName=\"longitude\" class=\"form-control\">\n            <div class=\"alert alert-danger\" *ngIf=\"parkingForm.get('longitude')?.touched && parkingForm.get('longitude')?.errors?.['required']\">\n                Longitude is required!\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"image\">Image</label>\n            <input type=\"file\" id=\"image\" (change)=\"onFileSelected($event)\" class=\"form-control\">\n            <img *ngIf=\"imagePreview\" [src]=\"imagePreview\" class=\"thumbnail-preview\">\n        </div>\n        <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-primary mybutton\" [disabled]=\"parkingForm.invalid\">Update</button>\n        </div>\n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}